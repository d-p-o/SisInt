// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisInt.Backend.AuthService.Data;

#nullable disable

namespace SisInt.Backend.AuthService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250723200606_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.LogAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IPOrigem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogAcessos");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.Permissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Permissoes");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.PermissaoPerfil", b =>
                {
                    b.Property<int>("PermissaoId")
                        .HasColumnType("int");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("PermissaoId", "PerfilId");

                    b.HasIndex("PerfilId");

                    b.ToTable("PermissaoPerfis");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.UsuarioPerfil", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "PerfilId");

                    b.HasIndex("PerfilId");

                    b.ToTable("UsuarioPerfis");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.LogAcesso", b =>
                {
                    b.HasOne("SisInt.Backend.AuthService.Models.Usuario", "Usuario")
                        .WithMany("LogAcessos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.PermissaoPerfil", b =>
                {
                    b.HasOne("SisInt.Backend.AuthService.Models.Perfil", "Perfil")
                        .WithMany("PermissaoPerfis")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisInt.Backend.AuthService.Models.Permissao", "Permissao")
                        .WithMany("PermissaoPerfis")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.UsuarioPerfil", b =>
                {
                    b.HasOne("SisInt.Backend.AuthService.Models.Perfil", "Perfil")
                        .WithMany("UsuarioPerfis")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisInt.Backend.AuthService.Models.Usuario", "Usuario")
                        .WithMany("UsuarioPerfis")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.Perfil", b =>
                {
                    b.Navigation("PermissaoPerfis");

                    b.Navigation("UsuarioPerfis");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.Permissao", b =>
                {
                    b.Navigation("PermissaoPerfis");
                });

            modelBuilder.Entity("SisInt.Backend.AuthService.Models.Usuario", b =>
                {
                    b.Navigation("LogAcessos");

                    b.Navigation("UsuarioPerfis");
                });
#pragma warning restore 612, 618
        }
    }
}
